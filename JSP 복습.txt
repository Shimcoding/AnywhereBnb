*HTML

HTML의 작성도구
-메모장, 한글, 워드 가능, 이클립스에서도 가능

Form 태그
NAME - 폼에 이름을 붙여줌
METHOD - 폼을 전송하는 방식을 정함
       - GET : 주소를 이용한 전송 타입
       - POST : 본문에 데이터를 담아 전송
ACTION - 폼이 전송되어 질 대상을 정함

입력태그
input
-text : 일반 텍스트
-password : 암호 입력
-hidden : 숨겨진 필드
-checkbox : 체크박스
-radio : 라디오 버튼
-file : 파일 버튼
-submit : 폼 값을 전송
-reset : 폼 값을 리셋
-image : 이미ㅈ;
textarea
-name
-rows
-cols
select
-nsmr
-size
-multiple


*자바스크립트
-웹 문서를 좀 더 동적으로 작성할 수 있도록 하기 위해 Netscape와 Sun Microsystem이 공동으로 개발한 언어
-Java를 기반으로 한 객체 지향적 스크립트 언어
-컴파일 과정 없이 브라우저에서 직접 실행되기 대문에 어느 플랫폼에서도 독립적으로 사용됨.
-브라우저에서 해석
-인터프리터 방식
-자료향을 미리 정하지 않아도 됨
-HTML문서 내에 함께 작성
-source가 공개되어 보안성을 지니지 않음.

<SCRIPT TYPE="TEXT/JAVASCRIPT" ~ </SCRIPT> 태그
-스크립트의 시작과 종료를 나타냄

alert
confirm - y/n
prompt 

JavaScript 기본문법

변수
-프로그램 실행 시 처리 대상이 되는 자료나 처리된 결과를 기억시킬 기억 장소의 이름
document.write
-document(현재 브라우저 문서)에 write(써라)는 명령

함수
-함수의 정의
<HEAD>~</HEAD> 사이에서 이루어짐
-이는 함수가 정의되기 전에 함수가 사용되는 것을 방지하기 위해서임.

내장 함수
-언어 자체에서 지원하는 함수를 말함.
-내장함수는 그 언어의 사용에 있어서 좀 더 강력하고 융통성 있는 기능을 가져다 주는 역할을 함.

이벤트
-우리는 PC환경에서 윈도우를 사용하면서 마우스를 클릭하고, 키보드를 누르고 하는 모든 것

이벤트 처리기
-이벤트가 발생했을 때 어떤 해동을 처리하는 것

window 객체
-자바스크립트의 브라우저 내장 객체의 최상위 객체로서 전체 윈도우의 적용될 내용들을 가지고 있으며 프레임 문서

Document 객체(중요)
-window 객체의 하위객체로 웹 검색기에 실행된 HTML 문서에 대한 거의 모든 정보를 관리하는 객체


*JSP 프로그래밍의 기초
<%@ %>
page 지시어
-jsp페이지에 대한 정보를 지정
-jsp가 생성하는 문서의 타입, 출력 버퍼의 크기, 에러 페이지 등 jsp에서 필요로 하는 정보를 입력

include 지시어
-jsp 페이지의 특정 영역에 다른 문서를 포함시킴.

taglib 지시어
-jsp 페이지에서 사용할 태그 라이브러리를 지정

스크립트 요소
표현식 - 값을 출력 <%= %> - 자바 변수, 계산값
스크립트릿 - 자바 코드를 실행 <% %> -jspService() 안에 코드가 들어감.
선언부 - 자바 메소드를 만듦. <%! %>

웹 컨테이너 과정
jsp 페이지 -> 서블릿 파일(.java 코드) -> .class 파일 -> 실행

include 타입을 쓸 때는 contentType을 맞춰야 한다.


내장객체
-jsp 페이지는 웹 컨테이너에 의해 서블릿 클래스로 변환되어 사용자의 요청을 수행함.
-이 서블릿 클래스가 인스턴스를 생성하고 사용자의 요청에 맞는 응답 페이지를 생성하기 위해서는 기본적으로 javax.servlet 패키지 아래 몇 가지의 객체가 필수적으로 사용됨.

request 객체(요청)
-사용자가 서버에 웹 브라우저를 통해 페이지(자원)을 요청할 경우 브라우저는 사용자 요청과 관련된 일련의 데이터들을 HTPP 메시지로 구성해 서버에 전송하게 됨.
-이러한 HTTP 메시지는 HTTP헤더와 HTTP본문으로 구성되며 웹 서버는 HTTP 메시지를 수신하여 그 안의 정보를 분석해 이 요청이 서블릿/JSP 요청으로 판명될 경우 JSP/서블릿 컨테이너에 용처에 대한 처리를 넘김

response 객체(응답)
-클라이언트의 요청에 대한 HTTP 응답을 나타내는 객체 웹 컨테이너에서는 javax.servlet.http.HttpServletResponse 객체를 사용해 response 객체를 생성 JSP 페이지에서는 response 객체를 통해 클라이언트로 전송될 HTTP 응답헤더 정보를 설정하거나, 쿠키를 추가하고 페이지를 리다이렉트하는 등의 기능을 할 수 있음.

pageContext 객체
-javax.servlet.jsp.PageContext 클래스를 상속하여 웹 컨테이너가 구현한 객체로 JSP 페이지와 관련된 프로그램에서 다른 내장 객체를 얻어내거나 현재 페이지의 요청과 응답의 제어권을 다른 페이지로 넘겨줌.

session 객체
-http 프로토콜은 요청/응답의 구조로 되어 있어 서버가 요청에 대한 응답을 전송하고 나면 연결이 끊어짐

application 객체
-javax.servlet.sSErveltContext 클래스를 상속받아 웹 컨테이너가 구현하여 제공하는 객체로 해당 웹 어플리케이션의 실행환견을 제공하는 서버의 정보와 서버 측 자원에 대한 정보를 얻어내거나

out 객체
-서블릿/JSP 컨테이너가 응답 페이지를 만들기 위해 사용하는 출력 스트림 객체
-java.io.Writer 클래스를 상속한
javax.servelt.jsp.JspWriter 클래스 타입으로 선언
-응답 페이지를 만들어

config 객체
-JSP 페이지가 서블릿 클래스로 변환되어  서블릿 인스턴스가 생성될 때 참조해야 할 초기 설정 정보들을 저장해 놓은 객체

page 객체
-JSP 페이지에 의해 생성되는 서블릿 인스턴스 자체를 나타내는 객체
-코드를 살펴보면

exception 객체
-JSP 페이지에서 예외가 발생하였을 경우 그 예외를 처리할 에러 페이질르 사용자가 지정하였을 경우에 해당 에러 페이지로 전달되는 예외 객체임.

일반적인 홈페이지 만들기 jspTest1
<%@ include file=".jsp" %>


*도서 관리 프로그램
-도서 등록하는 기능
-도서 검색하는 기능(도서명,지은이,출판사)
-도서 전체를 보는 기능
-도서 삭제하는 기능(도서명으로 삭제)

도서 등록 페이지(입고일은 입력할 날짜)

jsp db 연결
Class.forName("Oracle.jdbc.driver.OracleDriver");
 	String url = "jdbc:oracle:thin:@127.0.0.1:1521:xe";

insert 하려면
alter user 사용자이름 default tablespace users quota unlimited on users;

도서 목록 페이지
도서명/지은이/츌판사/가격/입고일 순으로 전체 목록을 출력해 줌

도서 검색 페이지


*자바빈 액셕

자바빈
-자바빈을 사용하게 되면 디자인 부분과 로직 부분을 나눠서 개발을 할 수 있음.
-디자이너는 디자인만, 프로그래머는 프로그램만 나눠서 개발을 하기 위해 만든 방식

설계규약
-멤버변수마다 별도의 get/set 메소드가 존재해야 함(메소드 명은 멤버 변수와 일치해야 함) -> DTO
-get메소드는 파라미터가 존재하지 않아야 함.
-set 메소드는 반드시 하나 이상의 파라미터가 존재해야 함.
-빈즈 컴포넌트의 속성은 반드시 읽기 또는 쓰기가 가능해야 함.
-생성자는 파라미터가 존재하지 않아야 함.(디폴트 생성자가 존재해야 한다.)

<jsp:userBean/> 태그
<jsp:userBean id="빈이름" class="자바빈 클래스 명" scope="사용범위"/>
->자바빈 객체를 생성해 주기 위한 태그

scope의 값은 page,request,session

<jsp:setProperty/> 태그
<jsp:setProperty name="빈이름" property="속성명" value="설정할 속성값"/>

<jsp:getProperty name="빈이름" property

DTO와 DAO의 개념

DTO
-Data Transfer Object
-테이블의 구조와 똑같은 객체를 만들어 줌

DAO
-Data Access Object
-테이블의 자료를 Access하는 객체를 만들어 줌

자바 파일은 예외처리를 직접 해줘야 한다.


*회원가입 페이지 만들기

db
SQL> create table jsp_member
  2  (no number primary key,
  3  name varchar2(20) not null,
  4  id varchar2(15) not null,
  5  passwd varchar2(10) not null,
  6  ssn1 varchar2(6) not null,
  7  ssn2 varchar2(7) not null,
  8  email varchar2(30),
  9  hp1 varchar2(3),
 10  hp2 varchar2(4),
 11  hp3 varchar2(4),
 12  joindate varchar2(10));

SQL> create sequence jsp_member_no;

시퀀스가 생성되었습니다.

DTO를 만들기
home.member.MemberDTO

DAO를 만들기
home.memeber.MemberDAO


*회원관리 페이지 만들기
